basePath: /
definitions:
  model.CreateContactSwagger:
    properties:
      answer_email:
        example: ""
        type: string
      contact_email:
        example: ""
        type: string
      facebook:
        example: ""
        type: string
      linkedin:
        example: ""
        type: string
      phone:
        example: ""
        type: string
      telegram:
        example: ""
        type: string
    type: object
  model.CreateHeroSwagger:
    properties:
      description:
        example: some description
        type: string
      image:
        example: stunning image
        type: string
      title:
        example: some title
        type: string
    type: object
  model.CreateImageCarouselSwagger:
    properties:
      image:
        example: ""
        type: string
    type: object
  model.CreatePartnerSwagger:
    properties:
      image:
        example: ""
        type: string
      title:
        example: ""
        type: string
    type: object
  model.CreateProjSectDescSwagger:
    properties:
      description:
        example: some description
        type: string
    type: object
  model.CreateProjectSwagger:
    properties:
      age_category:
        example: ""
        type: string
      category:
        example: ""
        type: string
      description:
        example: ""
        type: string
      image:
        example: ""
        type: string
      link:
        example: ""
        type: string
      period:
        example:
        - ""
        items:
          type: string
        type: array
      title:
        example: ""
        type: string
    type: object
  model.CreateUserSwagger:
    properties:
      combat_certificate:
        example: true
        type: boolean
      disability_certificate:
        example:
        - ""
        items:
          type: string
        type: array
      email:
        example: example1@gmail.com
        type: string
      international_passport:
        example:
        - ""
        items:
          type: string
        type: array
      location:
        example: ""
        type: string
      name:
        example: ""
        type: string
      patronymic:
        example: ""
        type: string
      phone:
        example: "+380631122331"
        type: string
      physical_action_constraints:
        example:
        - ""
        items:
          type: string
        type: array
      surname:
        example: ""
        type: string
      weight_below_95:
        example: true
        type: boolean
    type: object
  model.Project:
    properties:
      age_category:
        example: ""
        type: string
      category:
        example: ""
        type: string
      created:
        example: ""
        type: string
      description:
        example: ""
        type: string
      id:
        example: ""
        type: string
      image:
        example: ""
        type: string
      is_active:
        example: true
        type: boolean
      last_modified:
        example: ""
        type: string
      link:
        example: ""
        type: string
      period:
        example:
        - ""
        items:
          type: string
        type: array
      title:
        example: ""
        type: string
    required:
    - age_category
    - category
    - description
    - image
    - link
    - period
    - title
    type: object
  model.Response:
    properties:
      code:
        type: integer
      messsage:
        type: string
    type: object
  model.UpdateContactSwagger:
    properties:
      answer_email:
        example: ""
        type: string
      contact_email:
        example: ""
        type: string
      facebook:
        example: ""
        type: string
      id:
        example: ""
        type: string
      linkedin:
        example: ""
        type: string
      phone:
        example: ""
        type: string
      telegram:
        example: ""
        type: string
    type: object
  model.UpdateHeroSwagger:
    properties:
      description:
        example: some description
        type: string
      id:
        example: ""
        type: string
      image:
        example: stunning image
        type: string
      title:
        example: some title
        type: string
    type: object
  model.UpdatePartnerSwagger:
    properties:
      created:
        example: ""
        type: string
      id:
        example: ""
        type: string
      image:
        example: ""
        type: string
      title:
        example: ""
        type: string
    type: object
  model.UpdateProjSectDescSwagger:
    properties:
      description:
        example: some description
        type: string
      id:
        example: ""
        type: string
    type: object
  model.UpdateUserSwagger:
    properties:
      combat_certificate:
        example: true
        type: boolean
      disability_certificate:
        example:
        - ""
        items:
          type: string
        type: array
      email:
        example: example1@gmail.com
        type: string
      id:
        example: ""
        type: string
      international_passport:
        example:
        - ""
        items:
          type: string
        type: array
      location:
        example: ""
        type: string
      name:
        example: ""
        type: string
      patronymic:
        example: ""
        type: string
      phone:
        example: "+380631122331"
        type: string
      physical_action_constraints:
        example:
        - ""
        items:
          type: string
        type: array
      surname:
        example: ""
        type: string
      weight_below_95:
        example: true
        type: boolean
    type: object
host: localhost:7000
info:
  contact:
    email: etverya12@gmail.com
    name: Yehor Tverytinov
  title: Walking-School backend API
  version: "1.0"
paths:
  /contact:
    post:
      consumes:
      - application/json
      parameters:
      - description: Contact
        in: body
        name: Contact
        required: true
        schema:
          $ref: '#/definitions/model.CreateContactSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create contact .
      tags:
      - contact
    put:
      consumes:
      - application/json
      parameters:
      - description: Contact
        in: body
        name: Contact
        required: true
        schema:
          $ref: '#/definitions/model.UpdateContactSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Update contact by id.
      tags:
      - contact
  /contact/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get contact by id.
      tags:
      - contact
  /hero:
    get:
      consumes:
      - application/json
      parameters:
      - description: limit
        in: query
        name: limit
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get all heros.
      tags:
      - hero
    post:
      consumes:
      - application/json
      parameters:
      - description: Hero
        in: body
        name: Hero
        required: true
        schema:
          $ref: '#/definitions/model.CreateHeroSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create hero .
      tags:
      - hero
    put:
      consumes:
      - application/json
      parameters:
      - description: Hero
        in: body
        name: Hero
        required: true
        schema:
          $ref: '#/definitions/model.UpdateHeroSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Update hero by id.
      tags:
      - hero
  /hero/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Delete hero by id.
      tags:
      - hero
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get hero by id.
      tags:
      - hero
  /image-carousel:
    get:
      consumes:
      - application/json
      parameters:
      - description: limit
        in: query
        name: limit
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get all images.
      tags:
      - image carousel
    post:
      consumes:
      - application/json
      parameters:
      - description: ImagesCarousel
        in: body
        name: ImagesCarousel
        required: true
        schema:
          $ref: '#/definitions/model.CreateImageCarouselSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create image.
      tags:
      - image carousel
  /image-carousel/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Delete image by id.
      tags:
      - image carousel
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get image by id.
      tags:
      - image carousel
  /partner:
    get:
      consumes:
      - application/json
      parameters:
      - description: limit
        in: query
        name: limit
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get all partners.
      tags:
      - partner
    post:
      consumes:
      - application/json
      parameters:
      - description: Partner
        in: body
        name: Partner
        required: true
        schema:
          $ref: '#/definitions/model.CreatePartnerSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create partner .
      tags:
      - partner
    put:
      consumes:
      - application/json
      parameters:
      - description: Partner
        in: body
        name: Partner
        required: true
        schema:
          $ref: '#/definitions/model.UpdatePartnerSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Update partner by id.
      tags:
      - partner
  /partner/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Delete partner by id.
      tags:
      - partner
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get partner by id.
      tags:
      - partner
  /project:
    get:
      consumes:
      - application/json
      parameters:
      - description: limit
        in: query
        name: limit
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get all projects.
      tags:
      - project
    post:
      consumes:
      - application/json
      parameters:
      - description: Project
        in: body
        name: Project
        required: true
        schema:
          $ref: '#/definitions/model.CreateProjectSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create project.
      tags:
      - project
    put:
      consumes:
      - application/json
      parameters:
      - description: Project
        in: body
        name: Project
        required: true
        schema:
          $ref: '#/definitions/model.Project'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Update project by id.
      tags:
      - project
  /project/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Delete project by id.
      tags:
      - project
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get project by id.
      tags:
      - project
  /projects-section-description:
    post:
      consumes:
      - application/json
      parameters:
      - description: ProjSectDesc
        in: body
        name: ProjSectDesc
        required: true
        schema:
          $ref: '#/definitions/model.CreateProjSectDescSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create projects section description.
      tags:
      - projects section description
    put:
      consumes:
      - application/json
      parameters:
      - description: ProjSectDesc
        in: body
        name: ProjSectDesc
        required: true
        schema:
          $ref: '#/definitions/model.UpdateProjSectDescSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Update projects section description by id.
      tags:
      - projects section description
  /projects-section-description/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get projects section description by id.
      tags:
      - projects section description
  /user:
    get:
      consumes:
      - application/json
      parameters:
      - description: limit
        in: query
        name: limit
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get all users.
      tags:
      - user
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/model.CreateUserSwagger'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create user.
      tags:
      - user
    put:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/model.UpdateUserSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Update user by id.
      tags:
      - user
  /user/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Delete user by id.
      tags:
      - user
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "408":
          description: Request Timeout
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get user by id.
      tags:
      - user
swagger: "2.0"
